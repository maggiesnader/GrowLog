@using PagedList;
@using PagedList.Mvc;
@using GrowLog.Models;
@model IPagedList<PlantListItem>

<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.Title = "Plants";
}

<div class="content-wrapper" style="width: 50vw; margin: auto;">
    <div class="spacer" style="height: 4.5vw"></div>
    <h2 class="indexTitle" style="color: rgba(255, 255, 255, 0.897); background-color: darkolivegreen; width: 50vw; margin: auto; 
      font-family: 'Arbutus', sans-serif; font-size: 6vw; text-align: center; border-style: double; 
      border-width: 0.40vw; border-color: darkslategray; border-radius: 7px;">
        Plants
    </h2>
    <div class="spacer" style="height: 2vw"></div>


    <p>
        <div class="searchBar" style="text-align: end;">
            @using (Html.BeginForm("Index", "Plant", FormMethod.Get))
            {
                @Html.RadioButton("searchBy", "PlantName") <text>Name</text>
                @Html.RadioButton("searchBy", "LocationName", true) <text>Location</text> <br />
                <b>Search Plants: </b> @Html.TextBox("search") <input type="submit" value="Search" />
                @Html.ActionLink("Refresh", "Index", "Plant", null, new { @class = "link ", style = "color: darkslategrey;" })
            }
        </div>
        <br /><br />
        <div class="linkBar" style="text-align:end; font-size: 1.5vw;">
            @Html.ActionLink("Create New Plant", "Create", null, new { @class = "link ", style = "color: darkslategrey;" }) ||
            @Html.ActionLink("Location List", "Index", "Location", null, new { @class = "link ", style = "color: darkslategrey;" }) ||
            @Html.ActionLink("Calendar", "Index", "BasicScheduler", null, new { @style = "color: darkslategrey;" })

        </div>
    </p>
    <br />
    <table class="table" style="width:50vw; margin:auto;">


        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="3"> No Plants match search criteria. </td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr class="plantTableData" style="font-size: 2vw;">

                    <td style="text-align: left;">
                        
                        @Html.ActionLink(item.PlantName, "Details", new { id = item.PlantID }, htmlAttributes: new { @class = "plantNameLink", @style = "color: darkslategrey; font-size: 4vw; text-decoration:none;" })
                        <br />
                        Start Planting: @Html.DisplayFor(modelItem => item.PlantingSeasonStart)
                        <br />
                        Garden: @Html.DisplayFor(modelItem => item.LocationName)
                        <br /><br />
                              <div style="text-align: center; font-size: 1.5vw;">
                                  @Html.ActionLink("Add Log Entry", "Create", "LogEntry", new { plantId = item.PlantID }, htmlAttributes: new { @class = "plantNameLink ", style = "color: darkslategrey; font-size: 1.5vw;  text-decoration:none;" }) ||
                                  @Html.ActionLink($"{item.PlantName} Log Entries", "Index", "LogEntry", new { plantId = item.PlantID }, htmlAttributes: new { @class = "plantNameLink", @style = "color: darkslategrey; font-size: 1.5vw;  text-decoration:none;" }) ||
                                  @Html.ActionLink($"Edit {item.PlantName}", "Edit", new { id = item.PlantID }, htmlAttributes: new { @class = "plantNameLink", @style = "color: darkslategrey; font-size: 1.5vw;  text-decoration:none;" }) ||
                                  @Html.ActionLink("Details", "Details", new { id = item.PlantID }, htmlAttributes: new { @class = "plantNameLink", @style = "color: darkslategrey; font-size: 1.5vw;  text-decoration:none;" }) ||
                                  @Html.ActionLink("Delete", "Delete", new { id = item.PlantID }, htmlAttributes: new { @class = "plantNameLink", @style = "color: darkslategrey; font-size: 1.5vw;  text-decoration:none;" })
                              </div>
                    </td>

                </tr>
            }
        }
    </table>
    <br />
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] }),
        new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })

</div>